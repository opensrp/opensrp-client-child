buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.0"
    }
}

allprojects {
    repositories {
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
        maven { url "https://dl.bintray.com/ona/rdt-capture" }
        maven { url "https://dl.bintray.com/ibm-watson-health/ibm-fhir-server-releases" }
        mavenLocal()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'org.smartregister.gradle.jarjar'

android {

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId "org.smartregister.child.sample"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        javaCompileOptions.annotationProcessorOptions.includeCompileClasspath true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        buildConfigField "String[]", "LOCATION_LEVELS", '{"Country", "Province", "District", "Facility", "Village"}'
        buildConfigField "String[]", "HEALTH_FACILITY_LEVELS", '{"Country", "Province", "District", "Health Facility", "Village"}'
        buildConfigField "String[]", "ALLOWED_LEVELS", '{"Health Facility"}'
        buildConfigField "String", "DEFAULT_LEVEL", '"Health Facility"'
        buildConfigField "String[]", "DATA_CAPTURE_LEVELS", '{"Mobile Clinic"}'
        buildConfigField "String","OAUTH_CLIENT_ID",'"opensrp-trusted-client"'
        buildConfigField "String","OAUTH_CLIENT_SECRET",'"O@aTHS#cr3t"'

        if (project.rootProject.file("local.properties").exists()) {

            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())

            if (properties != null && properties.containsKey("oauth.client.id")) {

                buildConfigField "String", "OAUTH_CLIENT_ID", properties["oauth.client.id"]

            } else {
                project.logger.error("oauth.client.id variable is not set in your local.properties")
            }

            if (properties != null && properties.containsKey("oauth.client.secret")) {

                buildConfigField "String", "OAUTH_CLIENT_SECRET", properties["oauth.client.secret"]

            } else {
                project.logger.error("oauth.client.secret variable is not set in your local.properties")
            }
        }

    }

    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "DATABASE_VERSION", '1'
        }

        debug {
            buildConfigField "int", "OPENMRS_UNIQUE_ID_INITIAL_BATCH_SIZE", '250'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_BATCH_SIZE", '100'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '2'
            buildConfigField "int", "DATABASE_VERSION", '1'
            buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
            buildConfigField "boolean", "TIME_CHECK", "false"
            buildConfigField "int", "DATA_SYNC_DURATION_MINUTES", '15'
            buildConfigField "int", "VACCINE_SYNC_PROCESSING_MINUTES", '15'
            buildConfigField "int", "IMAGE_UPLOAD_MINUTES", '7'
            buildConfigField "int", "PULL_UNIQUE_IDS_MINUTES", '10'
            buildConfigField "int", "VIEW_SYNC_CONFIGURATIONS_MINUTES", '15'
            buildConfigField "int", "CLIENT_SETTINGS_SYNC_MINUTES", '15'
            buildConfigField "boolean", "IS_SYNC_SETTINGS", "false"
            buildConfigField "int", "MAX_SYNC_RETRIES", '3'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
        exclude 'androidsupportmultidexversion.txt'
    }

    lintOptions {
        checkReleaseBuilds false
        disable 'MissingTranslation'
        checkReleaseBuilds false
        abortOnError false
    }

}

dependencies {

    implementation(project(":opensrp-child")) {
        transitive = true
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
    }

    jarJar 'com.ibm.fhir:fhir-model:4.2.3'

    implementation fileTree(dir: "./build/libs", include: ['*.jar'])

    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'
    implementation 'androidx.media:media:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'net.zetetic:android-database-sqlcipher:4.1.3@aar'
    implementation 'androidx.leanback:leanback:1.0.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation "androidx.constraintlayout:constraintlayout:2.0.0"
}
